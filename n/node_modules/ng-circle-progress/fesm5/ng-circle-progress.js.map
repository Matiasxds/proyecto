{"version":3,"file":"ng-circle-progress.js","sources":["ng://ng-circle-progress/circle-progress.component.ts","ng://ng-circle-progress/index.ts","ng://ng-circle-progress/ng-circle-progress.ts"],"sourcesContent":["import {Component, EventEmitter, Input, OnChanges, Output, Inject, OnInit, OnDestroy, ElementRef, SimpleChanges} from '@angular/core';\r\nimport {DOCUMENT} from '@angular/common';\r\nimport {Subscription, timer} from 'rxjs';\r\n\r\nexport interface CircleProgressOptionsInterface {\r\n    class?: string;\r\n    backgroundGradient?: boolean;\r\n    backgroundColor?: string;\r\n    backgroundGradientStopColor?: string;\r\n    backgroundOpacity?: number;\r\n    backgroundStroke?: string;\r\n    backgroundStrokeWidth?: number;\r\n    backgroundPadding?: number;\r\n    percent?: number;\r\n    radius?: number;\r\n    space?: number;\r\n    toFixed?: number;\r\n    maxPercent?: number;\r\n    renderOnClick?: boolean;\r\n    units?: string;\r\n    unitsFontSize?: string;\r\n    unitsFontWeight?: string;\r\n    unitsColor?: string;\r\n    outerStrokeGradient?: boolean;\r\n    outerStrokeWidth?: number;\r\n    outerStrokeColor?: string;\r\n    outerStrokeGradientStopColor?: string;\r\n    outerStrokeLinecap?: string;\r\n    innerStrokeColor?: string;\r\n    innerStrokeWidth?: number;\r\n    titleFormat?: Function;\r\n    title?: string | Array<String>;\r\n    titleColor?: string;\r\n    titleFontSize?: string;\r\n    titleFontWeight?: string;\r\n    subtitleFormat?: Function;\r\n    subtitle?: string | Array<String>;\r\n    subtitleColor?: string;\r\n    subtitleFontSize?: string;\r\n    subtitleFontWeight?: string;\r\n    imageSrc?: string;\r\n    imageHeight?: number;\r\n    imageWidth?: number;    \r\n    animation?: boolean;\r\n    animateTitle?: boolean;\r\n    animateSubtitle?: boolean;\r\n    animationDuration?: number;\r\n    showTitle?: boolean;\r\n    showSubtitle?: boolean;\r\n    showUnits?: boolean;\r\n    showImage?: boolean;\r\n    showBackground?: boolean;\r\n    showInnerStroke?: boolean;\r\n    clockwise?: boolean;\r\n    responsive?: boolean;\r\n    startFromZero?: boolean;\r\n    showZeroOuterStroke?: boolean;\r\n    lazy?: boolean;\r\n}\r\n\r\nexport class CircleProgressOptions implements CircleProgressOptionsInterface {\r\n    class = '';\r\n    backgroundGradient = false;\r\n    backgroundColor = 'transparent';\r\n    backgroundGradientStopColor = 'transparent';\r\n    backgroundOpacity = 1;\r\n    backgroundStroke = 'transparent';\r\n    backgroundStrokeWidth = 0;\r\n    backgroundPadding = 5;\r\n    percent = 0;\r\n    radius = 90;\r\n    space = 4;\r\n    toFixed = 0;\r\n    maxPercent = 1000;\r\n    renderOnClick = true;\r\n    units = '%';\r\n    unitsFontSize = '10';\r\n    unitsFontWeight = 'normal';\r\n    unitsColor = '#444444';\r\n    outerStrokeGradient = false;\r\n    outerStrokeWidth = 8;\r\n    outerStrokeColor = '#78C000';\r\n    outerStrokeGradientStopColor = 'transparent';\r\n    outerStrokeLinecap = 'round';\r\n    innerStrokeColor = '#C7E596';\r\n    innerStrokeWidth = 4;\r\n    titleFormat = undefined;\r\n    title: string | Array<String> = 'auto';\r\n    titleColor = '#444444';\r\n    titleFontSize = '20';\r\n    titleFontWeight = 'normal';\r\n    subtitleFormat = undefined;\r\n    subtitle: string | Array<String> = 'progress';\r\n    subtitleColor = '#A9A9A9';\r\n    subtitleFontSize = '10';\r\n    subtitleFontWeight = 'normal';\r\n    imageSrc = undefined;\r\n    imageHeight = undefined;\r\n    imageWidth = undefined;\r\n    animation = true;\r\n    animateTitle = true;\r\n    animateSubtitle = false;\r\n    animationDuration = 500;\r\n    showTitle = true;\r\n    showSubtitle = true;\r\n    showUnits = true;\r\n    showImage = false;\r\n    showBackground = true;\r\n    showInnerStroke = true;\r\n    clockwise = true;\r\n    responsive = false;\r\n    startFromZero = true;\r\n    showZeroOuterStroke = true;\r\n    lazy = false;\r\n}\r\n\r\n/** @dynamic Prevent compiling error when using type `Document` https://github.com/angular/angular/issues/20351 */\r\n@Component({\r\n    selector: 'circle-progress',\r\n    template: `\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" *ngIf=\"svg\"\r\n             [attr.viewBox]=\"svg.viewBox\" preserveAspectRatio=\"xMidYMid meet\"\r\n             [attr.height]=\"svg.height\" [attr.width]=\"svg.width\" (click)=\"emitClickEvent($event)\" [attr.class]=\"options.class\">\r\n            <defs>\r\n                <linearGradient *ngIf=\"options.outerStrokeGradient\" [attr.id]=\"svg.outerLinearGradient.id\">\r\n                    <stop offset=\"5%\" [attr.stop-color]=\"svg.outerLinearGradient.colorStop1\"  [attr.stop-opacity]=\"1\"/>\r\n                    <stop offset=\"95%\" [attr.stop-color]=\"svg.outerLinearGradient.colorStop2\" [attr.stop-opacity]=\"1\"/>\r\n                </linearGradient>\r\n                <radialGradient *ngIf=\"options.backgroundGradient\" [attr.id]=\"svg.radialGradient.id\">\r\n                    <stop offset=\"5%\" [attr.stop-color]=\"svg.radialGradient.colorStop1\" [attr.stop-opacity]=\"1\"/>\r\n                    <stop offset=\"95%\" [attr.stop-color]=\"svg.radialGradient.colorStop2\" [attr.stop-opacity]=\"1\"/>\r\n                </radialGradient>\r\n            </defs>\r\n            <ng-container *ngIf=\"options.showBackground\">\r\n                <circle *ngIf=\"!options.backgroundGradient\"\r\n                        [attr.cx]=\"svg.backgroundCircle.cx\"\r\n                        [attr.cy]=\"svg.backgroundCircle.cy\"\r\n                        [attr.r]=\"svg.backgroundCircle.r\"\r\n                        [attr.fill]=\"svg.backgroundCircle.fill\"\r\n                        [attr.fill-opacity]=\"svg.backgroundCircle.fillOpacity\"\r\n                        [attr.stroke]=\"svg.backgroundCircle.stroke\"\r\n                        [attr.stroke-width]=\"svg.backgroundCircle.strokeWidth\"/>\r\n                <circle *ngIf=\"options.backgroundGradient\"\r\n                        [attr.cx]=\"svg.backgroundCircle.cx\"\r\n                        [attr.cy]=\"svg.backgroundCircle.cy\"\r\n                        [attr.r]=\"svg.backgroundCircle.r\"\r\n                        attr.fill=\"url(#{{svg.radialGradient.id}})\"\r\n                        [attr.fill-opacity]=\"svg.backgroundCircle.fillOpacity\"\r\n                        [attr.stroke]=\"svg.backgroundCircle.stroke\"\r\n                        [attr.stroke-width]=\"svg.backgroundCircle.strokeWidth\"/>\r\n            </ng-container>            \r\n            <circle *ngIf=\"options.showInnerStroke\"\r\n                    [attr.cx]=\"svg.circle.cx\"\r\n                    [attr.cy]=\"svg.circle.cy\"\r\n                    [attr.r]=\"svg.circle.r\"\r\n                    [attr.fill]=\"svg.circle.fill\"\r\n                    [attr.stroke]=\"svg.circle.stroke\"\r\n                    [attr.stroke-width]=\"svg.circle.strokeWidth\"/>\r\n            <ng-container *ngIf=\"+options.percent!==0 || options.showZeroOuterStroke\">\r\n                <path *ngIf=\"!options.outerStrokeGradient\"\r\n                        [attr.d]=\"svg.path.d\"\r\n                        [attr.stroke]=\"svg.path.stroke\"\r\n                        [attr.stroke-width]=\"svg.path.strokeWidth\"\r\n                        [attr.stroke-linecap]=\"svg.path.strokeLinecap\"\r\n                        [attr.fill]=\"svg.path.fill\"/>\r\n                <path *ngIf=\"options.outerStrokeGradient\"\r\n                        [attr.d]=\"svg.path.d\"\r\n                        attr.stroke=\"url(#{{svg.outerLinearGradient.id}})\"\r\n                        [attr.stroke-width]=\"svg.path.strokeWidth\"\r\n                        [attr.stroke-linecap]=\"svg.path.strokeLinecap\"\r\n                        [attr.fill]=\"svg.path.fill\"/>\r\n            </ng-container>\r\n            <text *ngIf=\"!options.showImage && (options.showTitle || options.showUnits || options.showSubtitle)\"\r\n                  alignment-baseline=\"baseline\"\r\n                  [attr.x]=\"svg.circle.cx\"\r\n                  [attr.y]=\"svg.circle.cy\"\r\n                  [attr.text-anchor]=\"svg.title.textAnchor\">\r\n                <ng-container *ngIf=\"options.showTitle\">\r\n                    <tspan *ngFor=\"let tspan of svg.title.tspans\"\r\n                           [attr.x]=\"svg.title.x\"\r\n                           [attr.y]=\"svg.title.y\"\r\n                           [attr.dy]=\"tspan.dy\"\r\n                           [attr.font-size]=\"svg.title.fontSize\"\r\n                           [attr.font-weight]=\"svg.title.fontWeight\"\r\n                           [attr.fill]=\"svg.title.color\">{{tspan.span}}</tspan>\r\n                </ng-container>\r\n                <tspan *ngIf=\"options.showUnits\"\r\n                       [attr.font-size]=\"svg.units.fontSize\"\r\n                       [attr.font-weight]=\"svg.units.fontWeight\"\r\n                       [attr.fill]=\"svg.units.color\">{{svg.units.text}}</tspan>\r\n                <ng-container *ngIf=\"options.showSubtitle\">\r\n                    <tspan *ngFor=\"let tspan of svg.subtitle.tspans\"\r\n                           [attr.x]=\"svg.subtitle.x\"\r\n                           [attr.y]=\"svg.subtitle.y\"\r\n                           [attr.dy]=\"tspan.dy\"\r\n                           [attr.font-size]=\"svg.subtitle.fontSize\"\r\n                           [attr.font-weight]=\"svg.subtitle.fontWeight\"\r\n                           [attr.fill]=\"svg.subtitle.color\">{{tspan.span}}</tspan>\r\n                </ng-container>\r\n            </text>\r\n            <image *ngIf=\"options.showImage\" preserveAspectRatio=\"none\" \r\n                [attr.height]=\"svg.image.height\"\r\n                [attr.width]=\"svg.image.width\"\r\n                [attr.xlink:href]=\"svg.image.src\"\r\n                [attr.x]=\"svg.image.x\"\r\n                [attr.y]=\"svg.image.y\"\r\n            />\r\n        </svg>\r\n    `\r\n})\r\nexport class CircleProgressComponent implements OnChanges, OnInit, OnDestroy {\r\n\r\n    @Output() onClick: EventEmitter<any> = new EventEmitter();\r\n\r\n    @Input() name: string;\r\n    @Input() class: string;\r\n    @Input() backgroundGradient: boolean;\r\n    @Input() backgroundColor: string;\r\n    @Input() backgroundGradientStopColor: String;\r\n    @Input() backgroundOpacity: number;\r\n    @Input() backgroundStroke: string;\r\n    @Input() backgroundStrokeWidth: number;\r\n    @Input() backgroundPadding: number;\r\n\r\n    @Input() radius: number;\r\n    @Input() space: number;\r\n    @Input() percent: number;\r\n    @Input() toFixed: number;\r\n    @Input() maxPercent: number;\r\n    @Input() renderOnClick: boolean;\r\n\r\n    @Input() units: string;\r\n    @Input() unitsFontSize: string;\r\n    @Input() unitsFontWeight: string;\r\n    @Input() unitsColor: string;\r\n\r\n    @Input() outerStrokeGradient: boolean;\r\n    @Input() outerStrokeWidth: number;\r\n    @Input() outerStrokeColor: string;\r\n    @Input() outerStrokeGradientStopColor: String;\r\n    @Input() outerStrokeLinecap: string;\r\n\r\n    @Input() innerStrokeColor: string;\r\n    @Input() innerStrokeWidth: string | number;\r\n\r\n    @Input() titleFormat: Function;\r\n    @Input() title: string | Array<String>;\r\n    @Input() titleColor: string;\r\n    @Input() titleFontSize: string;\r\n    @Input() titleFontWeight: string;\r\n\r\n    @Input() subtitleFormat: Function;\r\n    @Input() subtitle: string | string[];\r\n    @Input() subtitleColor: string;\r\n    @Input() subtitleFontSize: string;\r\n    @Input() subtitleFontWeight: string;\r\n\r\n    @Input() imageSrc: string;\r\n    @Input() imageHeight: number;\r\n    @Input() imageWidth: number;\r\n\r\n    @Input() animation: boolean;\r\n    @Input() animateTitle: boolean;\r\n    @Input() animateSubtitle: boolean;\r\n    @Input() animationDuration: number;\r\n\r\n    @Input() showTitle: boolean;\r\n    @Input() showSubtitle: boolean;\r\n    @Input() showUnits: boolean;\r\n    @Input() showImage: boolean;\r\n    @Input() showBackground: boolean;\r\n    @Input() showInnerStroke: boolean;\r\n    @Input() clockwise: boolean;\r\n    @Input() responsive: boolean;\r\n    @Input() startFromZero: boolean;\r\n    @Input() showZeroOuterStroke: boolean;\r\n    \r\n    @Input() lazy: boolean;\r\n\r\n    @Input('options') templateOptions: CircleProgressOptions;\r\n\r\n    // <svg> of component\r\n    svgElement: HTMLElement = null;\r\n    // whether <svg> is in viewport\r\n    isInViewport: Boolean = false;\r\n    // event for notifying viewport change caused by scrolling or resizing\r\n    onViewportChanged: EventEmitter<{oldValue: Boolean, newValue: Boolean}> = new EventEmitter;\r\n    window: Window;\r\n    _viewportChangedSubscriber: Subscription = null;\r\n\r\n    svg: any;\r\n\r\n    options: CircleProgressOptions = new CircleProgressOptions();\r\n    defaultOptions: CircleProgressOptions = new CircleProgressOptions();\r\n    _lastPercent: number = 0;\r\n    _gradientUUID: string = null;\r\n    render = () => {\r\n\r\n        this.applyOptions();\r\n\r\n        if(this.options.lazy){\r\n            // Draw svg if it doesn't exist\r\n            this.svgElement === null && this.draw(this._lastPercent);\r\n            // Draw it only when it's in the viewport\r\n            if(this.isInViewport){\r\n                // Draw it at the latest position when I am in.\r\n                if (this.options.animation && this.options.animationDuration > 0) {\r\n                    this.animate(this._lastPercent, this.options.percent);\r\n                } else {\r\n                    this.draw(this.options.percent);\r\n                }\r\n                this._lastPercent = this.options.percent;\r\n            }\r\n        } else {\r\n            if (this.options.animation && this.options.animationDuration > 0) {\r\n                this.animate(this._lastPercent, this.options.percent);\r\n            } else {\r\n                this.draw(this.options.percent);\r\n            }\r\n            this._lastPercent = this.options.percent;\r\n        }\r\n    };\r\n    polarToCartesian = (centerX: number, centerY: number, radius: number, angleInDegrees: number) => {\r\n        let angleInRadius = angleInDegrees * Math.PI / 180;\r\n        let x = centerX + Math.sin(angleInRadius) * radius;\r\n        let y = centerY - Math.cos(angleInRadius) * radius;\r\n        return {x: x, y: y};\r\n    };\r\n    draw = (percent: number) => {\r\n        // make percent reasonable\r\n        percent = (percent === undefined) ? this.options.percent : Math.abs(percent);\r\n        // circle percent shouldn't be greater than 100%.\r\n        let circlePercent = (percent > 100) ? 100 : percent;\r\n        // determine box size\r\n        let boxSize = this.options.radius * 2 + this.options.outerStrokeWidth * 2;\r\n        if (this.options.showBackground) {\r\n            boxSize += (this.options.backgroundStrokeWidth * 2 + this.max(0, this.options.backgroundPadding * 2));\r\n        }\r\n        // the centre of the circle\r\n        let centre = {x: boxSize / 2, y: boxSize / 2};\r\n        // the start point of the arc\r\n        let startPoint = {x: centre.x, y: centre.y - this.options.radius};\r\n        // get the end point of the arc\r\n        let endPoint = this.polarToCartesian(centre.x, centre.y, this.options.radius, 360 * (this.options.clockwise ?\r\n            circlePercent :\r\n            (100 - circlePercent)) / 100);  // ####################\r\n        // We'll get an end point with the same [x, y] as the start point when percent is 100%, so move x a little bit.\r\n        if (circlePercent === 100) {\r\n            endPoint.x = endPoint.x + (this.options.clockwise ? -0.01 : +0.01);\r\n        }\r\n        // largeArcFlag and sweepFlag\r\n        let largeArcFlag: any, sweepFlag: any;\r\n        if (circlePercent > 50) {\r\n            [largeArcFlag, sweepFlag] = this.options.clockwise ? [1, 1] : [1, 0];\r\n        } else {\r\n            [largeArcFlag, sweepFlag] = this.options.clockwise ? [0, 1] : [0, 0];\r\n        }\r\n        // percent may not equal the actual percent\r\n        let titlePercent = this.options.animateTitle ? percent : this.options.percent;\r\n        let titleTextPercent = titlePercent > this.options.maxPercent ?\r\n            `${this.options.maxPercent.toFixed(this.options.toFixed)}+` : titlePercent.toFixed(this.options.toFixed);\r\n        let subtitlePercent = this.options.animateSubtitle ? percent : this.options.percent;\r\n        // get title object\r\n        let title = {\r\n            x: centre.x,\r\n            y: centre.y,\r\n            textAnchor: 'middle',\r\n            color: this.options.titleColor,\r\n            fontSize: this.options.titleFontSize,\r\n            fontWeight: this.options.titleFontWeight,\r\n            texts: [],\r\n            tspans: []\r\n        };\r\n        // from v0.9.9, both title and titleFormat(...) may be an array of string.\r\n        if (this.options.titleFormat !== undefined && this.options.titleFormat.constructor.name === 'Function') {\r\n            let formatted = this.options.titleFormat(titlePercent);\r\n            if (formatted instanceof Array) {\r\n                title.texts = [...formatted];\r\n            } else {\r\n                title.texts.push(formatted.toString());\r\n            }\r\n        } else {\r\n            if (this.options.title === 'auto') {\r\n                title.texts.push(titleTextPercent);\r\n            } else {\r\n                if (this.options.title instanceof Array) {\r\n                    title.texts = [...this.options.title]\r\n                } else {\r\n                    title.texts.push(this.options.title.toString());\r\n                }\r\n            }\r\n        }\r\n        // get subtitle object\r\n        let subtitle = {\r\n            x: centre.x,\r\n            y: centre.y,\r\n            textAnchor: 'middle',\r\n            color: this.options.subtitleColor,\r\n            fontSize: this.options.subtitleFontSize,\r\n            fontWeight: this.options.subtitleFontWeight,\r\n            texts: [],\r\n            tspans: []\r\n        }\r\n        // from v0.9.9, both subtitle and subtitleFormat(...) may be an array of string.\r\n        if (this.options.subtitleFormat !== undefined && this.options.subtitleFormat.constructor.name === 'Function') {\r\n            let formatted = this.options.subtitleFormat(subtitlePercent);\r\n            if (formatted instanceof Array) {\r\n                subtitle.texts = [...formatted];\r\n            } else {\r\n                subtitle.texts.push(formatted.toString());\r\n            }\r\n        } else {\r\n            if (this.options.subtitle instanceof Array) {\r\n                subtitle.texts = [...this.options.subtitle]\r\n            } else {\r\n                subtitle.texts.push(this.options.subtitle.toString());\r\n            }\r\n        }\r\n        // get units object\r\n        let units = {\r\n            text: `${this.options.units}`,\r\n            fontSize: this.options.unitsFontSize,\r\n            fontWeight: this.options.unitsFontWeight,\r\n            color: this.options.unitsColor\r\n        };\r\n        // get total count of text lines to be shown\r\n        let rowCount = 0, rowNum = 1;\r\n        this.options.showTitle && (rowCount += title.texts.length);\r\n        this.options.showSubtitle && (rowCount += subtitle.texts.length);\r\n        // calc dy for each tspan for title\r\n        if (this.options.showTitle) {\r\n            for (let span of title.texts) {\r\n                title.tspans.push({span: span, dy: this.getRelativeY(rowNum, rowCount)});\r\n                rowNum++;\r\n            }\r\n        }\r\n        // calc dy for each tspan for subtitle\r\n        if (this.options.showSubtitle) {\r\n            for (let span of subtitle.texts) {\r\n                subtitle.tspans.push({span: span, dy: this.getRelativeY(rowNum, rowCount)})\r\n                rowNum++;\r\n            }\r\n        }\r\n        // create ID for gradient element\r\n        if (null === this._gradientUUID){\r\n            this._gradientUUID = this.uuid();\r\n        }\r\n        // Bring it all together\r\n        this.svg = {\r\n            viewBox: `0 0 ${boxSize} ${boxSize}`,\r\n            // Set both width and height to '100%' if it's responsive\r\n            width: this.options.responsive ? '100%' : boxSize,\r\n            height: this.options.responsive ? '100%' : boxSize,\r\n            backgroundCircle: {\r\n                cx: centre.x,\r\n                cy: centre.y,\r\n                r: this.options.radius + this.options.outerStrokeWidth / 2 + this.options.backgroundPadding,\r\n                fill: this.options.backgroundColor,\r\n                fillOpacity: this.options.backgroundOpacity,\r\n                stroke: this.options.backgroundStroke,\r\n                strokeWidth: this.options.backgroundStrokeWidth,\r\n            },\r\n            path: {\r\n                // A rx ry x-axis-rotation large-arc-flag sweep-flag x y (https://developer.mozilla.org/en/docs/Web/SVG/Tutorial/Paths#Arcs)\r\n                d: `M ${startPoint.x} ${startPoint.y}\r\n        A ${this.options.radius} ${this.options.radius} 0 ${largeArcFlag} ${sweepFlag} ${endPoint.x} ${endPoint.y}`,\r\n                stroke: this.options.outerStrokeColor,\r\n                strokeWidth: this.options.outerStrokeWidth,\r\n                strokeLinecap: this.options.outerStrokeLinecap,\r\n                fill: 'none'\r\n            },\r\n            circle: {\r\n                cx: centre.x,\r\n                cy: centre.y,\r\n                r: this.options.radius - this.options.space - this.options.outerStrokeWidth / 2 - this.options.innerStrokeWidth / 2,\r\n                fill: 'none',\r\n                stroke: this.options.innerStrokeColor,\r\n                strokeWidth: this.options.innerStrokeWidth,\r\n            },\r\n            title: title,\r\n            units: units,\r\n            subtitle: subtitle,\r\n            image: {\r\n                x: centre.x - this.options.imageWidth / 2,\r\n                y: centre.y - this.options.imageHeight / 2,\r\n                src: this.options.imageSrc,\r\n                width: this.options.imageWidth,\r\n                height: this.options.imageHeight,\r\n            },\r\n            outerLinearGradient: {\r\n                id: 'outer-linear-' + this._gradientUUID,\r\n                colorStop1: this.options.outerStrokeColor,\r\n                colorStop2: this.options.outerStrokeGradientStopColor === 'transparent' ? '#FFF' : this.options.outerStrokeGradientStopColor,\r\n            },\r\n            radialGradient: {\r\n                id: 'radial-' + this._gradientUUID,\r\n                colorStop1: this.options.backgroundColor,\r\n                colorStop2: this.options.backgroundGradientStopColor === 'transparent' ? '#FFF' : this.options.backgroundGradientStopColor,\r\n            }\r\n        };\r\n    };\r\n    getAnimationParameters = (previousPercent: number, currentPercent: number) => {\r\n        const MIN_INTERVAL = 10;\r\n        let times: number, step: number, interval: number;\r\n        let fromPercent = this.options.startFromZero ? 0 : (previousPercent < 0 ? 0 : previousPercent);\r\n        let toPercent = currentPercent < 0 ? 0 : this.min(currentPercent, this.options.maxPercent);\r\n        let delta = Math.abs(Math.round(toPercent - fromPercent));\r\n\r\n        if (delta >= 100) {\r\n            // we will finish animation in 100 times\r\n            times = 100;\r\n            if (!this.options.animateTitle && !this.options.animateSubtitle) {\r\n                step = 1;\r\n            } else {\r\n                // show title or subtitle animation even if the arc is full, we also need to finish it in 100 times.\r\n                step = Math.round(delta / times);\r\n            }\r\n        } else {\r\n            // we will finish in as many times as the number of percent.\r\n            times = delta;\r\n            step = 1;\r\n        }\r\n        // Get the interval of timer\r\n        interval = Math.round(this.options.animationDuration / times);\r\n        // Readjust all values if the interval of timer is extremely small.\r\n        if (interval < MIN_INTERVAL) {\r\n            interval = MIN_INTERVAL;\r\n            times = this.options.animationDuration / interval;\r\n            if (!this.options.animateTitle && !this.options.animateSubtitle && delta > 100) {\r\n                step = Math.round(100 / times);\r\n            } else {\r\n                step = Math.round(delta / times);\r\n            }\r\n        }\r\n        // step must be greater than 0.\r\n        if (step < 1) {\r\n            step = 1;\r\n        }\r\n        return {times: times, step: step, interval: interval};\r\n    };\r\n    animate = (previousPercent: number, currentPercent: number) => {\r\n        if (this._timerSubscription && !this._timerSubscription.closed) {\r\n            this._timerSubscription.unsubscribe();\r\n        }\r\n        let fromPercent = this.options.startFromZero ? 0 : previousPercent;\r\n        let toPercent = currentPercent;\r\n        let {step: step, interval: interval} = this.getAnimationParameters(fromPercent, toPercent);\r\n        let count = fromPercent;\r\n        if(fromPercent < toPercent){\r\n            this._timerSubscription = timer(0, interval).subscribe(() => {\r\n                count += step;\r\n                if (count <= toPercent) {\r\n                    if (!this.options.animateTitle && !this.options.animateSubtitle && count >= 100) {\r\n                        this.draw(toPercent);\r\n                        this._timerSubscription.unsubscribe();\r\n                    } else {\r\n                        this.draw(count);\r\n                    }\r\n                } else {\r\n                    this.draw(toPercent);\r\n                    this._timerSubscription.unsubscribe();\r\n                }\r\n            });\r\n        }else{\r\n            this._timerSubscription = timer(0, interval).subscribe(() => {\r\n                count -= step;\r\n                if (count >= toPercent) {\r\n                    if (!this.options.animateTitle && !this.options.animateSubtitle && toPercent >= 100) {\r\n                        this.draw(toPercent);\r\n                        this._timerSubscription.unsubscribe();\r\n                    } else {\r\n                        this.draw(count);\r\n                    }\r\n                } else {\r\n                    this.draw(toPercent);\r\n                    this._timerSubscription.unsubscribe();\r\n                }\r\n            });\r\n        }\r\n    };\r\n    emitClickEvent = (event: any) => {\r\n        if (this.options.renderOnClick) {\r\n            this.animate(0, this.options.percent);\r\n        }\r\n        this.onClick.emit(event);\r\n    };\r\n    private _timerSubscription: Subscription;\r\n    private applyOptions = () => {\r\n        // the options of <circle-progress> may change already\r\n        for (let name of Object.keys(this.options)) {\r\n            if (this.hasOwnProperty(name) && this[name] !== undefined) {\r\n                this.options[name] = this[name];\r\n            } else if (this.templateOptions && this.templateOptions[name] !== undefined) {\r\n                this.options[name] = this.templateOptions[name];\r\n            }\r\n        }\r\n        // make sure key options valid\r\n        this.options.radius = Math.abs(+this.options.radius);\r\n        this.options.space = +this.options.space;\r\n        this.options.percent = +this.options.percent > 0 ? +this.options.percent : 0;\r\n        this.options.maxPercent = Math.abs(+this.options.maxPercent);\r\n        this.options.animationDuration = Math.abs(this.options.animationDuration);\r\n        this.options.outerStrokeWidth = Math.abs(+this.options.outerStrokeWidth);\r\n        this.options.innerStrokeWidth = Math.abs(+this.options.innerStrokeWidth);\r\n        this.options.backgroundPadding = +this.options.backgroundPadding;\r\n    };\r\n    private getRelativeY = (rowNum: number, rowCount: number): string => {\r\n        // why '-0.18em'? It's a magic number when property 'alignment-baseline' equals 'baseline'. :)\r\n        let initialOffset = -0.18, offset = 1;\r\n        return (initialOffset + offset * (rowNum - rowCount / 2)).toFixed(2) + 'em';\r\n    };\r\n\r\n    private min = (a: number, b: number) => {\r\n        return a < b ? a : b;\r\n    };\r\n\r\n    private max = (a: number, b: number) => {\r\n        return a > b ? a : b;\r\n    };\r\n\r\n    private uuid = () => {\r\n        // https://www.w3resource.com/javascript-exercises/javascript-math-exercise-23.php\r\n        var dt = new Date().getTime();\r\n        var uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\r\n            var r = (dt + Math.random()*16)%16 | 0;\r\n            dt = Math.floor(dt/16);\r\n            return (c=='x' ? r :(r&0x3|0x8)).toString(16);\r\n        });\r\n        return uuid;\r\n    }\r\n\r\n    public isDrawing(): boolean {\r\n        return (this._timerSubscription && !this._timerSubscription.closed);\r\n    }\r\n\r\n    public findSvgElement = function() {\r\n        if(this.svgElement === null){\r\n            let tags = this.elRef.nativeElement.getElementsByTagName('svg');\r\n            if(tags.length>0){\r\n                this.svgElement = tags[0];\r\n            }\r\n        }\r\n    }\r\n\r\n    private isElementInViewport (el) : Boolean {\r\n        // Return false if el has not been created in page.\r\n        if(el === null || el === undefined) return false;\r\n        // Check if the element is out of view due to a container scrolling\r\n        let rect = el.getBoundingClientRect(), parent = el.parentNode, parentRect;\r\n        do {\r\n          parentRect = parent.getBoundingClientRect();\r\n          if (rect.top >= parentRect.bottom) return false;\r\n          if (rect.bottom <= parentRect.top) return false;\r\n          if (rect.left >= parentRect.right) return false;\r\n          if (rect.right <= parentRect.left) return false;\r\n          parent = parent.parentNode;\r\n        } while (parent != this.document.body);\r\n        // Check its within the document viewport\r\n        if (rect.top >= (this.window.innerHeight || this.document.documentElement.clientHeight)) return false;\r\n        if (rect.bottom <= 0) return false;\r\n        if (rect.left >= (this.window.innerWidth || this.document.documentElement.clientWidth)) return false;\r\n        if (rect.right <= 0) return false;\r\n        return true;\r\n    }\r\n\r\n    checkViewport = () => {\r\n        this.findSvgElement();\r\n        let previousValue = this.isInViewport;\r\n        this.isInViewport = this.isElementInViewport(this.svgElement);\r\n        if(previousValue !== this.isInViewport) {\r\n            this.onViewportChanged.emit({oldValue: previousValue, newValue: this.isInViewport});\r\n        }\r\n    }\r\n\r\n    onScroll = (event: Event) => {\r\n        this.checkViewport();\r\n    }\r\n\r\n    loadEventsForLazyMode = () => {\r\n        if(this.options.lazy){\r\n            this.document.addEventListener('scroll', this.onScroll, true);\r\n            this.window.addEventListener('resize', this.onScroll, true);\r\n            if(this._viewportChangedSubscriber === null){\r\n                this._viewportChangedSubscriber = this.onViewportChanged.subscribe(({oldValue, newValue}) => {\r\n                    newValue ? this.render() : null;\r\n                });\r\n            }\r\n            // svgElement must be created in DOM before being checked.\r\n            // Is there a better way to check the existence of svgElemnt?\r\n            let _timer = timer(0, 50).subscribe(()=>{\r\n                this.svgElement === null ? this.checkViewport() : _timer.unsubscribe();\r\n            })\r\n        }\r\n    }\r\n\r\n    unloadEventsForLazyMode = () => {\r\n        // Remove event listeners\r\n        this.document.removeEventListener('scroll', this.onScroll, true);\r\n        this.window.removeEventListener('resize', this.onScroll, true);\r\n        // Unsubscribe onViewportChanged\r\n        if(this._viewportChangedSubscriber !== null){\r\n            this._viewportChangedSubscriber.unsubscribe();\r\n            this._viewportChangedSubscriber = null;\r\n        }\r\n    }\r\n\r\n    ngOnInit(){\r\n        this.loadEventsForLazyMode();\r\n    }\r\n\r\n    ngOnDestroy(){\r\n        this.unloadEventsForLazyMode();\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        \r\n        this.render();\r\n\r\n        if('lazy' in changes){\r\n            changes.lazy.currentValue ? this.loadEventsForLazyMode() : this.unloadEventsForLazyMode();\r\n        }\r\n\r\n    }\r\n    \r\n    constructor(defaultOptions: CircleProgressOptions, private elRef: ElementRef, @Inject(DOCUMENT) private document: any) {\r\n        this.document = document;\r\n        this.window = this.document.defaultView;\r\n        Object.assign(this.options, defaultOptions);\r\n        Object.assign(this.defaultOptions, defaultOptions);\r\n    }\r\n\r\n}\r\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CircleProgressComponent, CircleProgressOptionsInterface, CircleProgressOptions } from './circle-progress.component';\n\nexport * from './circle-progress.component';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [\n    CircleProgressComponent,\n  ],\n  exports: [\n    CircleProgressComponent,\n  ]\n})\nexport class NgCircleProgressModule {\n  static forRoot(options: CircleProgressOptionsInterface = {}): ModuleWithProviders {\n    return {\n      ngModule: NgCircleProgressModule,\n      providers: [\n        {provide: CircleProgressOptions, useValue: options}\n      ]\n    };\n  }\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["tslib_1.__values","tslib_1.__decorate","tslib_1.__param"],"mappings":"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"}